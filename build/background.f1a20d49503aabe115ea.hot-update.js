webpackHotUpdate("background",{

/***/ "./src/js/background.js":
/*!******************************!*\
  !*** ./src/js/background.js ***!
  \******************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _img_icon_128_png__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../img/icon-128.png */ \"./src/img/icon-128.png\");\n/* harmony import */ var _img_icon_128_png__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_img_icon_128_png__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _img_icon_34_png__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../img/icon-34.png */ \"./src/img/icon-34.png\");\n/* harmony import */ var _img_icon_34_png__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_img_icon_34_png__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _tensorflow_tfjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @tensorflow/tfjs */ \"./node_modules/@tensorflow/tfjs/dist/index.js\");\n/* harmony import */ var _foreground__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./foreground */ \"./src/js/foreground.js\");\n\r\n\r\n\r\n\r\n\r\nvar model;\r\n\r\nconsole.log('from background js')\r\n\r\n\r\nasync function fetchVocabulary() {\r\n    console.log(\"in getVocabulary\");\r\n    let url = 'https://raw.githubusercontent.com/Hydrogen-Spoiler-Blocker/models/master/vocabulary.txt';\r\n    console.log(\"fetching url...\")\r\n    let response = await fetch(url);\r\n    // get one header\r\n    console.log(response.headers.get('Content-Type'));\r\n    let body = await response.text(); \r\n    let vocab_array = body.split(\"\\n\")\r\n    console.log(body[13])\r\n    console.log(vocab_array);\r\n    console.log(\"vocab fetched\") \r\n    return vocab_array\r\n}\r\n\r\n\r\nasync function loadModel() {\r\n    \r\n    const githublink = \"https://raw.githubusercontent.com/Hydrogen-Spoiler-Blocker/models/master/model.json\"\r\n    model = await _tensorflow_tfjs__WEBPACK_IMPORTED_MODULE_2__[\"loadLayersModel\"](githublink);\r\n    console.log(\"model loaded\")\r\n}\r\n\r\n\r\nconst encoder = (string, vocabulary) => {\r\n    let array = string.toLowerCase().split(\" \")\r\n    let vectorized = []\r\n    for (const element of array) {\r\n      let position = vocabulary.indexOf(element)\r\n      if (position === -1) {\r\n        vectorized.push(1)\r\n      } else {\r\n        vectorized.push(position)\r\n      }\r\n    }\r\n    return vectorized\r\n}\r\n\r\nloadModel().then(() => {\r\n    fetchVocabulary().then(vocab => {\r\n        const text = \"My name is Squidward\" //8 st\r\n        console.log(\"parsed text from vocabulary: \",encoder(text, vocab))\r\n        var vocablength = encoder(text, vocab).length\r\n        var shape = [1, 8]\r\n        console.log(model.summary())\r\n        var output = model.predict(_tensorflow_tfjs__WEBPACK_IMPORTED_MODULE_2__[\"tensor2d\"](encoder(text, vocab), [1, vocablength]))\r\n        //output = model.predict([encoder(text, vocab), [vocablength, 1]])\r\n        console.log(\"PREDICTION : \", output.dataSync()[0] );\r\n\r\n    });\r\n})\r\n\r\n\r\nfunction makePrediction(paragraph) {\r\n    var a, b, output;\r\n    a = 0\r\n    b = 1\r\n    var input_xs = _tensorflow_tfjs__WEBPACK_IMPORTED_MODULE_2__[\"tensor2d\"]([\r\n        [a, b]\r\n    ]);\r\n    output = model.predict(input_xs);\r\n    const outputData = output.dataSync();\r\n    console.log(\"predicted: \", outputData[0]);\r\n    console.log(Number(outputData[0] > 0.5))\r\n    console.log(\"predicted^\")\r\n    return Number(outputData[0] > 0.5)\r\n    //document.getElementById(\"answer\").value = Number(outputData[0] > 0.5);\r\n}\r\n\r\nwindow.addEventListener('load', (event) => {\r\n    console.log(\"Loaded load loady lod\");\r\n})\r\n\r\nchrome.tabs.onUpdated.addListener((tabId, changeInfo, tab) => {\r\n    if(changeInfo.status == 'complete') {\r\n        console.log(\"ON UPDAAATED\");\r\n    }\r\n})\r\n\r\nfunction replaceText(element){\r\n    element.parentElement.style.color = 'black'\r\n    element.parentElement.style.backgroundColor = \"black\"\r\n}\r\n\r\n\r\nchrome.tabs.onActivated.addListener(tab => {\r\n    chrome.tabs.get(tab.tabId, current_tab => {\r\n        console.log(\"current URL: \",current_tab.url);\r\n        if(/^https:/.test(current_tab.url)){  \r\n            \r\n\r\n            var paragraphs = document.getElementsByTagName(\"p\")\r\n            console.log(\"paragraph: \", paragraphs[0].innerText);\r\n                //send to AI -> callback\r\n            \r\n                    //Callback: if spoiler block text\r\n                \r\n         \r\n\r\n            //textBlocker()\r\n            /*\r\n                webscraper.forEach(text){\r\n                    if(makeprediction(text) > 0.5){\r\n                        //block text\r\n                    }\r\n                }\r\n            */ \r\n            makePrediction(\"hello there\")\r\n            console.log(\"We are inside tabs onActivated\")\r\n            \r\n        }\r\n    })\r\n})\r\n\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvanMvYmFja2dyb3VuZC5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL3NyYy9qcy9iYWNrZ3JvdW5kLmpzPzgxMDQiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICcuLi9pbWcvaWNvbi0xMjgucG5nJ1xyXG5pbXBvcnQgJy4uL2ltZy9pY29uLTM0LnBuZydcclxuaW1wb3J0ICogYXMgdGYgZnJvbSAnQHRlbnNvcmZsb3cvdGZqcyc7XHJcbmltcG9ydCB7IHRlbnNvcjJkIH0gZnJvbSAnQHRlbnNvcmZsb3cvdGZqcyc7XHJcbmltcG9ydCB0ZXh0QmxvY2tlciBmcm9tIFwiLi9mb3JlZ3JvdW5kXCI7XHJcbnZhciBtb2RlbDtcclxuXHJcbmNvbnNvbGUubG9nKCdmcm9tIGJhY2tncm91bmQganMnKVxyXG5cclxuXHJcbmFzeW5jIGZ1bmN0aW9uIGZldGNoVm9jYWJ1bGFyeSgpIHtcclxuICAgIGNvbnNvbGUubG9nKFwiaW4gZ2V0Vm9jYWJ1bGFyeVwiKTtcclxuICAgIGxldCB1cmwgPSAnaHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL0h5ZHJvZ2VuLVNwb2lsZXItQmxvY2tlci9tb2RlbHMvbWFzdGVyL3ZvY2FidWxhcnkudHh0JztcclxuICAgIGNvbnNvbGUubG9nKFwiZmV0Y2hpbmcgdXJsLi4uXCIpXHJcbiAgICBsZXQgcmVzcG9uc2UgPSBhd2FpdCBmZXRjaCh1cmwpO1xyXG4gICAgLy8gZ2V0IG9uZSBoZWFkZXJcclxuICAgIGNvbnNvbGUubG9nKHJlc3BvbnNlLmhlYWRlcnMuZ2V0KCdDb250ZW50LVR5cGUnKSk7XHJcbiAgICBsZXQgYm9keSA9IGF3YWl0IHJlc3BvbnNlLnRleHQoKTsgXHJcbiAgICBsZXQgdm9jYWJfYXJyYXkgPSBib2R5LnNwbGl0KFwiXFxuXCIpXHJcbiAgICBjb25zb2xlLmxvZyhib2R5WzEzXSlcclxuICAgIGNvbnNvbGUubG9nKHZvY2FiX2FycmF5KTtcclxuICAgIGNvbnNvbGUubG9nKFwidm9jYWIgZmV0Y2hlZFwiKSBcclxuICAgIHJldHVybiB2b2NhYl9hcnJheVxyXG59XHJcblxyXG5cclxuYXN5bmMgZnVuY3Rpb24gbG9hZE1vZGVsKCkge1xyXG4gICAgXHJcbiAgICBjb25zdCBnaXRodWJsaW5rID0gXCJodHRwczovL3Jhdy5naXRodWJ1c2VyY29udGVudC5jb20vSHlkcm9nZW4tU3BvaWxlci1CbG9ja2VyL21vZGVscy9tYXN0ZXIvbW9kZWwuanNvblwiXHJcbiAgICBtb2RlbCA9IGF3YWl0IHRmLmxvYWRMYXllcnNNb2RlbChnaXRodWJsaW5rKTtcclxuICAgIGNvbnNvbGUubG9nKFwibW9kZWwgbG9hZGVkXCIpXHJcbn1cclxuXHJcblxyXG5jb25zdCBlbmNvZGVyID0gKHN0cmluZywgdm9jYWJ1bGFyeSkgPT4ge1xyXG4gICAgbGV0IGFycmF5ID0gc3RyaW5nLnRvTG93ZXJDYXNlKCkuc3BsaXQoXCIgXCIpXHJcbiAgICBsZXQgdmVjdG9yaXplZCA9IFtdXHJcbiAgICBmb3IgKGNvbnN0IGVsZW1lbnQgb2YgYXJyYXkpIHtcclxuICAgICAgbGV0IHBvc2l0aW9uID0gdm9jYWJ1bGFyeS5pbmRleE9mKGVsZW1lbnQpXHJcbiAgICAgIGlmIChwb3NpdGlvbiA9PT0gLTEpIHtcclxuICAgICAgICB2ZWN0b3JpemVkLnB1c2goMSlcclxuICAgICAgfSBlbHNlIHtcclxuICAgICAgICB2ZWN0b3JpemVkLnB1c2gocG9zaXRpb24pXHJcbiAgICAgIH1cclxuICAgIH1cclxuICAgIHJldHVybiB2ZWN0b3JpemVkXHJcbn1cclxuXHJcbmxvYWRNb2RlbCgpLnRoZW4oKCkgPT4ge1xyXG4gICAgZmV0Y2hWb2NhYnVsYXJ5KCkudGhlbih2b2NhYiA9PiB7XHJcbiAgICAgICAgY29uc3QgdGV4dCA9IFwiTXkgbmFtZSBpcyBTcXVpZHdhcmRcIiAvLzggc3RcclxuICAgICAgICBjb25zb2xlLmxvZyhcInBhcnNlZCB0ZXh0IGZyb20gdm9jYWJ1bGFyeTogXCIsZW5jb2Rlcih0ZXh0LCB2b2NhYikpXHJcbiAgICAgICAgdmFyIHZvY2FibGVuZ3RoID0gZW5jb2Rlcih0ZXh0LCB2b2NhYikubGVuZ3RoXHJcbiAgICAgICAgdmFyIHNoYXBlID0gWzEsIDhdXHJcbiAgICAgICAgY29uc29sZS5sb2cobW9kZWwuc3VtbWFyeSgpKVxyXG4gICAgICAgIHZhciBvdXRwdXQgPSBtb2RlbC5wcmVkaWN0KHRmLnRlbnNvcjJkKGVuY29kZXIodGV4dCwgdm9jYWIpLCBbMSwgdm9jYWJsZW5ndGhdKSlcclxuICAgICAgICAvL291dHB1dCA9IG1vZGVsLnByZWRpY3QoW2VuY29kZXIodGV4dCwgdm9jYWIpLCBbdm9jYWJsZW5ndGgsIDFdXSlcclxuICAgICAgICBjb25zb2xlLmxvZyhcIlBSRURJQ1RJT04gOiBcIiwgb3V0cHV0LmRhdGFTeW5jKClbMF0gKTtcclxuXHJcbiAgICB9KTtcclxufSlcclxuXHJcblxyXG5mdW5jdGlvbiBtYWtlUHJlZGljdGlvbihwYXJhZ3JhcGgpIHtcclxuICAgIHZhciBhLCBiLCBvdXRwdXQ7XHJcbiAgICBhID0gMFxyXG4gICAgYiA9IDFcclxuICAgIHZhciBpbnB1dF94cyA9IHRmLnRlbnNvcjJkKFtcclxuICAgICAgICBbYSwgYl1cclxuICAgIF0pO1xyXG4gICAgb3V0cHV0ID0gbW9kZWwucHJlZGljdChpbnB1dF94cyk7XHJcbiAgICBjb25zdCBvdXRwdXREYXRhID0gb3V0cHV0LmRhdGFTeW5jKCk7XHJcbiAgICBjb25zb2xlLmxvZyhcInByZWRpY3RlZDogXCIsIG91dHB1dERhdGFbMF0pO1xyXG4gICAgY29uc29sZS5sb2coTnVtYmVyKG91dHB1dERhdGFbMF0gPiAwLjUpKVxyXG4gICAgY29uc29sZS5sb2coXCJwcmVkaWN0ZWReXCIpXHJcbiAgICByZXR1cm4gTnVtYmVyKG91dHB1dERhdGFbMF0gPiAwLjUpXHJcbiAgICAvL2RvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiYW5zd2VyXCIpLnZhbHVlID0gTnVtYmVyKG91dHB1dERhdGFbMF0gPiAwLjUpO1xyXG59XHJcblxyXG53aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcignbG9hZCcsIChldmVudCkgPT4ge1xyXG4gICAgY29uc29sZS5sb2coXCJMb2FkZWQgbG9hZCBsb2FkeSBsb2RcIik7XHJcbn0pXHJcblxyXG5jaHJvbWUudGFicy5vblVwZGF0ZWQuYWRkTGlzdGVuZXIoKHRhYklkLCBjaGFuZ2VJbmZvLCB0YWIpID0+IHtcclxuICAgIGlmKGNoYW5nZUluZm8uc3RhdHVzID09ICdjb21wbGV0ZScpIHtcclxuICAgICAgICBjb25zb2xlLmxvZyhcIk9OIFVQREFBQVRFRFwiKTtcclxuICAgIH1cclxufSlcclxuXHJcbmZ1bmN0aW9uIHJlcGxhY2VUZXh0KGVsZW1lbnQpe1xyXG4gICAgZWxlbWVudC5wYXJlbnRFbGVtZW50LnN0eWxlLmNvbG9yID0gJ2JsYWNrJ1xyXG4gICAgZWxlbWVudC5wYXJlbnRFbGVtZW50LnN0eWxlLmJhY2tncm91bmRDb2xvciA9IFwiYmxhY2tcIlxyXG59XHJcblxyXG5cclxuY2hyb21lLnRhYnMub25BY3RpdmF0ZWQuYWRkTGlzdGVuZXIodGFiID0+IHtcclxuICAgIGNocm9tZS50YWJzLmdldCh0YWIudGFiSWQsIGN1cnJlbnRfdGFiID0+IHtcclxuICAgICAgICBjb25zb2xlLmxvZyhcImN1cnJlbnQgVVJMOiBcIixjdXJyZW50X3RhYi51cmwpO1xyXG4gICAgICAgIGlmKC9eaHR0cHM6Ly50ZXN0KGN1cnJlbnRfdGFiLnVybCkpeyAgXHJcbiAgICAgICAgICAgIFxyXG5cclxuICAgICAgICAgICAgdmFyIHBhcmFncmFwaHMgPSBkb2N1bWVudC5nZXRFbGVtZW50c0J5VGFnTmFtZShcInBcIilcclxuICAgICAgICAgICAgY29uc29sZS5sb2coXCJwYXJhZ3JhcGg6IFwiLCBwYXJhZ3JhcGhzWzBdLmlubmVyVGV4dCk7XHJcbiAgICAgICAgICAgICAgICAvL3NlbmQgdG8gQUkgLT4gY2FsbGJhY2tcclxuICAgICAgICAgICAgXHJcbiAgICAgICAgICAgICAgICAgICAgLy9DYWxsYmFjazogaWYgc3BvaWxlciBibG9jayB0ZXh0XHJcbiAgICAgICAgICAgICAgICBcclxuICAgICAgICAgXHJcblxyXG4gICAgICAgICAgICAvL3RleHRCbG9ja2VyKClcclxuICAgICAgICAgICAgLypcclxuICAgICAgICAgICAgICAgIHdlYnNjcmFwZXIuZm9yRWFjaCh0ZXh0KXtcclxuICAgICAgICAgICAgICAgICAgICBpZihtYWtlcHJlZGljdGlvbih0ZXh0KSA+IDAuNSl7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vYmxvY2sgdGV4dFxyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgKi8gXHJcbiAgICAgICAgICAgIG1ha2VQcmVkaWN0aW9uKFwiaGVsbG8gdGhlcmVcIilcclxuICAgICAgICAgICAgY29uc29sZS5sb2coXCJXZSBhcmUgaW5zaWRlIHRhYnMgb25BY3RpdmF0ZWRcIilcclxuICAgICAgICAgICAgXHJcbiAgICAgICAgfVxyXG4gICAgfSlcclxufSlcclxuXHJcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/js/background.js\n");

/***/ })

})